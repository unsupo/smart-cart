import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { WidgetConfig } from '../../models/WidgetConfig.model';
import { ALL_DIRECTIONS, RESIZE_DIRECTIONS } from '../../Utils';
var NgxWidgetComponent = /** @class */ (function () {
    function NgxWidgetComponent(elRef) {
        this.elRef = elRef;
        this.positionChange = new EventEmitter();
        this.movable = false;
        this._resizable = false;
        this.allDirections = RESIZE_DIRECTIONS;
        this._resizeDirections = ALL_DIRECTIONS;
        this.isTopResizable = false;
        this.isRightResizable = false;
        this.isBottomResizable = false;
        this.isLeftResizable = false;
        this.isTopRightResizable = false;
        this.isTopLeftResizable = false;
        this.isBottomRightResizable = false;
        this.isBottomLeftResizable = false;
        this.widgetConfig = new WidgetConfig(this.position);
    }
    Object.defineProperty(NgxWidgetComponent.prototype, "position", {
        get: function () {
            return this._position;
        },
        set: function (position) {
            this._position = position;
            this.widgetConfig.position = position;
            this.positionChange.emit(position);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(NgxWidgetComponent.prototype, "resizable", {
        get: function () {
            return this._resizable;
        },
        set: function (resizable) {
            this._resizable = resizable;
            if (resizable) {
                this.setResizeDirections();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgxWidgetComponent.prototype, "resizeDirections", {
        get: function () {
            return this._resizeDirections;
        },
        set: function (dirs) {
            this._resizeDirections = dirs.filter(function (dir) {
                return ALL_DIRECTIONS.indexOf(dir.toUpperCase()) !== -1;
            });
            this.setResizeDirections();
        },
        enumerable: true,
        configurable: true
    });
    NgxWidgetComponent.prototype.setResizeDirections = function () {
        var _this = this;
        this.isTopResizable = false;
        this.isRightResizable = false;
        this.isBottomResizable = false;
        this.isLeftResizable = false;
        this.isTopRightResizable = false;
        this.isTopLeftResizable = false;
        this.isBottomRightResizable = false;
        this.isBottomLeftResizable = false;
        this._resizeDirections.forEach(function (dir) {
            switch (dir) {
                case RESIZE_DIRECTIONS.top:
                    _this.isTopResizable = true;
                    break;
                case RESIZE_DIRECTIONS.left:
                    _this.isLeftResizable = true;
                    break;
                case RESIZE_DIRECTIONS.bottom:
                    _this.isBottomResizable = true;
                    break;
                case RESIZE_DIRECTIONS.right:
                    _this.isRightResizable = true;
                    break;
                case RESIZE_DIRECTIONS.topLeft:
                    _this.isTopLeftResizable = true;
                    break;
                case RESIZE_DIRECTIONS.topRight:
                    _this.isTopRightResizable = true;
                    break;
                case RESIZE_DIRECTIONS.bottomLeft:
                    _this.isBottomLeftResizable = true;
                    break;
                case RESIZE_DIRECTIONS.bottomRight:
                    _this.isBottomRightResizable = true;
                    break;
                default:
            }
        });
    };
    NgxWidgetComponent.prototype.getConfig = function () {
        return this.widgetConfig;
    };
    NgxWidgetComponent.prototype.getEl = function () {
        return this.elRef;
    };
    NgxWidgetComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-widget',
                    styles: ["\n                 :host{position:absolute}:host .wg-widget-content{position:absolute;overflow:hidden;height:100%;width:100%}:host.wg-moving .wg-widget-content,:host.wg-resizing .wg-widget-content{opacity:0.2;z-index:18}:host.wg-moving .wg-widget-edit-move{cursor:move;cursor:-webkit-grabbing}.wg-widget-edit-move{position:absolute;top:6px;right:6px;bottom:6px;left:6px;z-index:20;-ms-touch-action:none;touch-action:none;cursor:move;cursor:-webkit-grab}.wg-widget-edit-resize{position:absolute;-ms-touch-action:none;touch-action:none;top:0;right:0;bottom:0;left:0;z-index:15}.wg-resize{position:absolute}.wg-resize-diag{border-color:rgba(0,113,188,0.75);border-style:solid;width:0;height:0;z-index:1}.wg-resize-diag:hover{border-color:rgba(0,138,229,0.75)}.wg-resize-diag.dragging{border-color:rgba(0,174,239,0.75)}.wg-resize-axis{background-color:rgba(0,113,188,0.12)}.wg-resize-axis.dragging{background-color:rgba(0,174,239,0.24)}.wg-resize-nw{top:0;left:0;cursor:nw-resize;border-width:16px 16px 0 0;border-right-color:transparent !important}.wg-resize-ne{top:0;right:0;cursor:ne-resize;border-width:16px 0 0 16px;border-left-color:transparent !important}.wg-resize-se{bottom:0;right:0;cursor:se-resize;border-width:0 0 16px 16px;border-left-color:transparent !important}.wg-resize-sw{bottom:0;left:0;cursor:sw-resize;border-width:0 16px 16px 0;border-right-color:transparent !important}.wg-resize-n{top:0;right:0;left:0;height:6px;cursor:n-resize}.wg-resize-e{top:0;right:0;bottom:0;width:6px;cursor:e-resize}.wg-resize-s{right:0;bottom:0;left:0;height:6px;cursor:s-resize}.wg-resize-w{top:0;bottom:0;left:0;width:6px;cursor:w-resize}[hidden]{display:none}\n               "],
                    template: "\n                 <div class=\"wg-widget-content\">\n                     <ng-content></ng-content>\n                 </div>\n                 <div ngx-widget-mover *ngIf=\"movable\" class=\"wg-widget-edit-move\"></div>\n                 <div *ngIf=\"resizable\" class=\"wg-widget-edit-resize\">\n\n                     <div class=\"wg-resize wg-resize-axis wg-resize-n\" [ngx-widget-resizer]=\"allDirections.top\"\n                          [hidden]=\"!isTopResizable\"></div>\n                     <div class=\"wg-resize wg-resize-axis wg-resize-e\" [ngx-widget-resizer]=\"allDirections.right\"\n                          [hidden]=\"!isRightResizable\"></div>\n                     <div class=\"wg-resize wg-resize-axis wg-resize-s\" [ngx-widget-resizer]=\"allDirections.bottom\"\n                          [hidden]=\"!isBottomResizable\"></div>\n                     <div class=\"wg-resize wg-resize-axis wg-resize-w\" [ngx-widget-resizer]=\"allDirections.left\"\n                          [hidden]=\"!isLeftResizable\"></div>\n                     <div class=\"wg-resize wg-resize-diag wg-resize-nw\" [ngx-widget-resizer]=\"allDirections.topLeft\"\n                          [hidden]=\"!isTopLeftResizable\"></div>\n                     <div class=\"wg-resize wg-resize-diag wg-resize-ne\" [ngx-widget-resizer]=\"allDirections.topRight\"\n                          [hidden]=\"!isTopRightResizable\"></div>\n                     <div class=\"wg-resize wg-resize-diag wg-resize-se\" [ngx-widget-resizer]=\"allDirections.bottomRight\"\n                          [hidden]=\"!isBottomRightResizable\"></div>\n                     <div class=\"wg-resize wg-resize-diag wg-resize-sw\" [ngx-widget-resizer]=\"allDirections.bottomLeft\"\n                          [hidden]=\"!isBottomLeftResizable\"></div>\n                 </div>\n               "
                },] },
    ];
    /** @nocollapse */
    NgxWidgetComponent.ctorParameters = function () { return [
        { type: ElementRef, },
    ]; };
    NgxWidgetComponent.propDecorators = {
        'position': [{ type: Input },],
        'positionChange': [{ type: Output },],
        'movable': [{ type: Input },],
        'resizable': [{ type: Input },],
        'resizeDirections': [{ type: Input },],
    };
    return NgxWidgetComponent;
}());
export { NgxWidgetComponent };
//# sourceMappingURL=widget.component.js.map