import { AfterViewInit, ElementRef, EventEmitter, QueryList, Renderer2 } from '@angular/core';
import { Grid } from '../../models/Grid.model';
import { NgxWidgetComponent } from '../widget/widget.component';
import { GridRenderer } from '../../models/GridRenderer.model';
import { GridPoint } from '../../models/GridPoint.model';
import { WidgetConfig } from '../../models/WidgetConfig.model';
import { GridRectangle } from '../../models/GridRectangle.model';
export declare class NgxWidgetGridComponent implements AfterViewInit {
    private el;
    private _renderer;
    _rows: number;
    rows: number;
    _columns: number;
    columns: number;
    showGrid: boolean;
    _highlightNextPosition: boolean;
    highlightNextPosition: boolean;
    clickThrough: boolean;
    widgetPositionChangeEmitter: EventEmitter<{}>;
    gridFullEmitter: EventEmitter<{}>;
    widgetComponents: QueryList<NgxWidgetComponent>;
    grid: Grid;
    gridRenderer: GridRenderer;
    highlightedArea: GridRectangle;
    gridAlreadyFull: boolean;
    ngAfterViewInit(): void;
    refreshWidgets(): void;
    constructor(el: ElementRef, _renderer: Renderer2);
    hasWidget(widget: NgxWidgetComponent): boolean;
    addWidget(widget: NgxWidgetComponent, deferredRender?: boolean): void;
    clearGrid(): void;
    updateGridSize(): void;
    updateRendering(): void;
    getGridRectangle(): GridRectangle;
    rasterizeCoords(x: number, y: number): GridPoint;
    updateWidget(widget: NgxWidgetComponent): void;
    getWidgetPosition(widget: NgxWidgetComponent): any;
    getWidgetStyle(widget: NgxWidgetComponent): any;
    isPointObstructed(i: number, j: number): boolean;
    isAreaObstructed(area: GridRectangle, options: any): boolean;
    highlightArea(area: GridRectangle): void;
    updateNextPositionHighlight(): void;
    getNextPosition(): GridRectangle;
    getPositions(): WidgetConfig[];
    resetHighlights(): void;
    emitUpdatePosition(widget: WidgetConfig): void;
    getWidgetIndex(widgetConfig: WidgetConfig): number;
    assessAvailableGridSpace(): void;
}
